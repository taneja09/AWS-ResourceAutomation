{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"Launch EC2 - CSYE 6225 Spring 2020",
    "Parameters":{
       "VPCName":{
          "Type":"String"
       },
       "VPCCidrBlock":{
          "Type":"String",
          "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
       },
       "PubSubnetCidrBlock1":{
          "Type":"String",
          "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
       },
       "PubSubnetCidrBlock2":{
          "Type":"String",
          "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
       },
       "PubSubnetCidrBlock3":{
          "Type":"String",
          "AllowedPattern":"(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
       },
       "EC2InstanceVol":{
         "Type":"String"
      },
      "RDSInstanceVol":{
         "Type":"String"
      },
      "RDSPublicAccessibility":{
         "Type":"String"
      },
      "DBUsername":{
         "Type":"String"
      },
      "DBPassword":{
         "Type":"String"
      },
      "RDSDBName":{
         "Type":"String"
      },
      "DBInstanceId":{
         "Type":"String"
      },
      "EC2IamRole":{
         "Type":"String"
      },
      "EC2IamPolicy":{
         "Type":"String"
      }
    },
    "Resources":{
       "VPC":{
          "Type":"AWS::EC2::VPC",
          "Properties":{
             "CidrBlock":{
                "Ref":"VPCCidrBlock"
             },
             "EnableDnsHostnames":true,
             "EnableDnsSupport":true,
             "InstanceTenancy":"default",
             "Tags":[
                {
                   "Key":"Name",
                   "Value":{
                      "Ref":"VPCName"
                   }
                }
             ]
          }
       },
       "InternetGateway":{
          "Type":"AWS::EC2::InternetGateway"
       },
       "VPCGatewayAttachment":{
          "Type":"AWS::EC2::VPCGatewayAttachment",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             },
             "InternetGatewayId":{
                "Ref":"InternetGateway"
             }
          }
       },
       "PublicSubnetA":{
          "Type":"AWS::EC2::Subnet",
          "Properties":{
             "AvailabilityZone":{
                "Fn::Select":[
                   0,
                   {
                      "Fn::GetAZs":{
                         "Ref":"AWS::Region"
                      }
                   }
                ]
             },
             "VpcId":{
                "Ref":"VPC"
             },
             "CidrBlock":{
                "Ref":"PubSubnetCidrBlock1"
             },
             "MapPublicIpOnLaunch":true
          }
       },
       "PrivateSubnetB":{
          "Type":"AWS::EC2::Subnet",
          "Properties":{
             "AvailabilityZone":{
                "Fn::Select":[
                   1,
                   {
                      "Fn::GetAZs":{
                         "Ref":"AWS::Region"
                      }
                   }
                ]
             },
             "VpcId":{
                "Ref":"VPC"
             },
             "CidrBlock":{
                "Ref":"PubSubnetCidrBlock2"
             },
             "MapPublicIpOnLaunch":false
          }
       },
       "PrivateSubnetC":{
          "Type":"AWS::EC2::Subnet",
          "Properties":{
             "AvailabilityZone":{
                "Fn::Select":[
                   2,
                   {
                      "Fn::GetAZs":{
                         "Ref":"AWS::Region"
                      }
                   }
                ]
             },
             "VpcId":{
                "Ref":"VPC"
             },
             "CidrBlock":{
                "Ref":"PubSubnetCidrBlock3"
             },
             "MapPublicIpOnLaunch":false
          }
       },
       "RouteTable":{
          "Type":"AWS::EC2::RouteTable",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             }
          }
       },
       "PrivateRouteTable":{
          "Type":"AWS::EC2::RouteTable",
          "Properties":{
             "VpcId":{
                "Ref":"VPC"
             }
          }
       },
       "InternetRoute":{
          "Type":"AWS::EC2::Route",
          "DependsOn":"VPCGatewayAttachment",
          "Properties":{
             "DestinationCidrBlock":"0.0.0.0/0",
             "GatewayId":{
                "Ref":"InternetGateway"
             },
             "RouteTableId":{
                "Ref":"RouteTable"
             }
          }
       },
       "SubnetARouteTableAssociation":{
          "Type":"AWS::EC2::SubnetRouteTableAssociation",
          "Properties":{
             "RouteTableId":{
                "Ref":"RouteTable"
             },
             "SubnetId":{
                "Ref":"PublicSubnetA"
             }
          }
       },
       "SubnetBRouteTableAssociation":{
          "Type":"AWS::EC2::SubnetRouteTableAssociation",
          "Properties":{
             "RouteTableId":{
                "Ref":"PrivateRouteTable"
             },
             "SubnetId":{
                "Ref":"PrivateSubnetB"
             }
          }
       },
       "SubnetCRouteTableAssociation":{
          "Type":"AWS::EC2::SubnetRouteTableAssociation",
          "Properties":{
             "RouteTableId":{
                "Ref":"PrivateRouteTable"
             },
             "SubnetId":{
                "Ref":"PrivateSubnetC"
             }
          }
       },
       "EC2InstanceSecurityGroup":{
          "Type":"AWS::EC2::SecurityGroup",
          "Properties":{
             "GroupDescription":"Security Group Assignment6 - csye6225",
             "GroupName":"application",
             "VpcId":{
                "Ref":"VPC"
             },
             "SecurityGroupIngress":[
                {
                   "IpProtocol":"tcp",
                   "CidrIp":"0.0.0.0/0",
                   "FromPort":"443",
                   "ToPort":"443"
                },
                {
                   "IpProtocol":"tcp",
                   "CidrIp":"0.0.0.0/0",
                   "FromPort":"80",
                   "ToPort":"80"
                },
                {
                   "IpProtocol":"tcp",
                   "CidrIp":"0.0.0.0/0",
                   "FromPort":"22",
                   "ToPort":"22"
                },
                {
                   "IpProtocol":"tcp",
                   "CidrIp":"0.0.0.0/0",
                   "FromPort":"3000",
                   "ToPort":"3000"
                }
             ]
          }
       },
       "RDSInstanceSecurityGroup":{
          "Type":"AWS::EC2::SecurityGroup",
          "Properties":{
             "GroupDescription":"RDS Security Group Assignment6 - csye6225",
             "GroupName":"database",
             "VpcId":{
                "Ref":"VPC"
             },
             "SecurityGroupIngress":[
                {
                   "IpProtocol":"tcp",
                   "SourceSecurityGroupId":{
                      "Ref":"EC2InstanceSecurityGroup"
                   },
                   "FromPort":"3306",
                   "ToPort":"3306"
                }
             ]
          }
       },
       "S3Bucket":{
          "Type":"AWS::S3::Bucket",
          "Properties":{
             "BucketEncryption":{
                "ServerSideEncryptionConfiguration": [
                    {
                      "ServerSideEncryptionByDefault": {
                        "SSEAlgorithm": "AES256"
                      }
                    }
                  ]
             },
             "LifecycleConfiguration":{
                "Rules":[
                   {
                      "Id":"MoveToAIAfter30Days",
                      "Status":"Enabled",
                      "Transitions":[
                         {
                           "StorageClass" : "STANDARD_IA",
                           "TransitionInDays": "30"
                         }
                      ]
                   }
                ]
             }
          }
       },
       "IamPolicy":{
          "Type":"AWS::IAM::Policy",
          "Properties":{
            "PolicyName":{
               "Ref":"EC2IamPolicy"
            },
             "PolicyDocument": {
             "Version": "2012-10-17",
             "Statement":[
                {
                   "Action":["s3:Get*","s3:Put*","s3:Delete*"],
                   "Effect":"Allow",
                   "Resource":[
                      {"Fn::Join":["",["arn:aws:s3:::",{"Ref":"S3Bucket"}]]},
                      {"Fn::Join":["",["arn:aws:s3:::",{"Ref":"S3Bucket"},"/*"]]}
                   ]
                }
             ]
            },
            "Roles": [ {
                "Ref": "IamRole"
             } ]
          }
       },
       "IamRole":{
          "Type":"AWS::IAM::Role",
          "Properties":{
             "AssumeRolePolicyDocument":
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": ["sts:AssumeRole"]
                        }
                    ]
                },
             "Description":"Iam Role for EC2 instance with S3 Bucket Policy attached",
             "RoleName":{
                "Ref":"EC2IamRole"
             }
          }
       },

       "EC2InstanceProfile": {
        "Type": "AWS::IAM::InstanceProfile",
        "Properties": {
            "Path": "/",
            "Roles": [
                {
                    "Ref": "IamRole"
                }
            ]
        }
    },
       "EC2Instance":{
          "Type":"AWS::EC2::Instance",
          "Properties":{
             "ImageId":"ami-035c162e587bb331b",
             "InstanceType":"t2.micro",
             "SecurityGroupIds":[
                {
                   "Ref":"EC2InstanceSecurityGroup"
                }
             ],
             "KeyName":"awswork",
             "SubnetId":{
                "Ref":"PublicSubnetA"
             },
             "Tags":[
                {
                   "Key":"Name",
                   "Value":"WebAppInstance"
                }
             ],
             "IamInstanceProfile":{
                "Ref":"EC2InstanceProfile"
             },
             "BlockDeviceMappings":[
                {
                   "DeviceName":"/dev/sda1",
                   "Ebs":{
                      "DeleteOnTermination":"true",
                      "VolumeSize":{
                         "Ref":"EC2InstanceVol"
                      },
                      "VolumeType":"gp2"
                   }
                }
             ],
             "UserData":{
                "Fn::Base64":{
                   "Fn::Join":[
                      "",
                      [  
                         "#!/bin/bash -xe \n",
                         "echo '#!/bin/sh' >> myvariables.sh \n",
                        {"Fn::Join": ["",
                           ["echo ","'", "export MYSQL_USERNAME=","\"",{"Ref": "DBUsername"},"\"","'"," >> myvariables.sh \n" ]]
                        },
                        {"Fn::Join": ["",
                        ["echo ","'", "export MYSQL_ROOT_PASSWORD=","\"",{"Ref":"DBPassword"},"\"","'"," >> myvariables.sh \n" ]]
                        },
                        {"Fn::Join": ["",
                           ["echo ","'", "export MYSQL_DATABASE=","\"",{"Ref":"RDSDBName"},"\"","'"," >> myvariables.sh \n" ]]
                        },
                         {"Fn::Join": ["",
                              ["echo ","'", "export MYSQL_HOST=","\"",{"Fn::GetAtt": ["RDSInstance","Endpoint.Address"]},"\"","'"," >> myvariables.sh \n" ]]
                          },
                          {"Fn::Join": ["",
                            ["echo ","'", "export BucketName=","\"",{"Ref": "S3Bucket"},"\"","'"," >> myvariables.sh \n"]]
                          },
                         "echo 'export MYSQL_DIALECT=\"mysql\"' >> myvariables.sh\n",
                         "echo 'export NODE_ENV=\"test\"' >> myvariables.sh\n",
                         "echo 'export MYSQL_PORT=\"3306\"' >> myvariables.sh\n",
                         "sudo chmod +x myvariables.sh\n",
                         "sudo cp myvariables.sh /etc/profile.d/myvariables.sh\n",
                         "sudo apt install unzip\n"
                      ]
                   ]
                }
             }
          },
          "DependsOn":"RDSInstance"
       },
       "DBSubnetGroup":{
          "Type":"AWS::RDS::DBSubnetGroup",
          "Properties":{
             "DBSubnetGroupDescription":"DB Subnet Group for RDS Instance",
             "DBSubnetGroupName":"RDSSubnetGroup",
             "SubnetIds":[
                {
                   "Ref":"PrivateSubnetB"
                },
                {
                   "Ref":"PrivateSubnetC"
                }
             ],
             "Tags":[
                {
                   "Key":"Name",
                   "Value":"RDSSubnetGroup"
                }
             ]
          }
       },
       "RDSInstance":{
          "Type":"AWS::RDS::DBInstance",
          "Properties":{
             "AllocatedStorage":{
                "Ref":"RDSInstanceVol"
             },
             "DBInstanceClass":"db.t3.micro",
             "DBInstanceIdentifier":{
                "Ref":"DBInstanceId"
             },
             "VPCSecurityGroups":[
                {
                   "Ref":"RDSInstanceSecurityGroup"
                }
             ],
             "MultiAZ":"false",
             "Engine":"MySQL",
             "EngineVersion":"8.0.16",
             "MasterUsername":{
                "Ref":"DBUsername"
             },
             "MasterUserPassword":{
                "Ref":"DBPassword"
             },
             "PubliclyAccessible":{
                "Ref":"RDSPublicAccessibility"
             },
             "DBName":{
                "Ref": "RDSDBName"
             },
             "DBSubnetGroupName":{
                "Ref":"DBSubnetGroup"
             }
          }
       }
    },
    "Outputs":{
       "VPC":{
          "Description":"Newly Created VPC",
          "Value":{
             "Ref":"VPC"
          }
       },
      "RDS":{
         "Description":"Newly Created VPC",
         "Value":{
            "Ref":"RDSInstance"
         }  
      },
       "InternetGateway":{
          "Description":"Internet Gateway Associated",
          "Value":{
             "Ref":"InternetGateway"
          }
       },
       "EC2Instance":{
          "Description":"EC2 Instance",
          "Value":{
             "Ref":"EC2Instance"
          }
       }
    }
 }